buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = maven_group
archivesBaseName = mod_id + "-forge"
version = "${mod_version}+${minecraft_version}"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    /* For Unofficial MCP Mappings */ maven {
        url "https://www.dogforce-games.com/maven"
        name "GigaHerz Maven"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN'
            property 'forge.logging.console.level', 'debug'
            mods {
                preciseblockplacing { source sourceSets.main }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN'
            property 'forge.logging.console.level', 'debug'
            mods {
                preciseblockplacing { source sourceSets.main }
            }
        }
    }
}

processResources {
    inputs.properties(
            "mod_id": mod_id,
            "mod_name": mod_name,
            "mod_version": mod_version,
            "minecraft_version": minecraft_version,
			"forge_version": dep_forge_version,
            "loader_version": loader_version
    )
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand(
                "mod_id": mod_id,
                "mod_name": mod_name,
                "mod_version": mod_version,
                "minecraft_version": minecraft_version,
				"forge_version": dep_forge_version,
                "loader_version": loader_version
        )
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${mod_id}",
                "Specification-Vendor": "${author_name}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "${mod_name}",
                "Implementation-Version": "${mod_version}",
                "Implementation-Vendor" :"${author_name}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
	from('LICENSE')
}

jar.finalizedBy('reobfJar')